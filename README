Welcome to Q2VKPT, a Quake II engine with real-time path tracing.  This client
implements fully dynamic illumination without precomputation supporting area
light sources, reflections, soft shadows, and indirect illumination. This
client is a port of our real-time path tracer vkpt and is based on the Quake II
engine Q2PRO.

This client requires a high-end GPU supporting the Vulkan extension
VK_NV_ray_tracing.

Please refer to our project page for more details.

Project homepage: http://brechpunkt.de/q2vkpt

INSTALLATION INSTRUCTIONS FOR WINDOWS

Step 1) CD to your base Git directory.

Step 2) We need SPIRV to build shaders

git clone https://github.com/KhronosGroup/SPIRV-Tools.git   spirv-tools
git clone https://github.com/KhronosGroup/SPIRV-Headers.git spirv-tools/external/spirv-headers
git clone https://github.com/google/googletest.git          spirv-tools/external/googletest
git clone https://github.com/google/effcee.git              spirv-tools/external/effcee
git clone https://github.com/google/re2.git                 spirv-tools/external/re2

Step 3) Build SPIRV:

cd SPIRV-Tools
mkdir build && cd build
cmake [-G <platform-generator>] SPIRV-Tools

Step 4) You need OpenVR to be installed too:

cd ..

git clone https://github.com/ValveSoftware/openvr

OR 

git clone https://github.com/ValveSoftware/openvr q2vkpt/external/openvr

If you use Visual Studio 2017 with built-in CMAKE support, open the OpenVR folder in Visual Studio and change the installRoot to somewhere on your system:

      "installRoot": "C:\\DEV\\OPENVR",
	  

Step 5) Then build + install via CMAKE.

In VS 2018 running CMake -> Install should show you this:

Build succeeded.
[0/1] Install the project...
-- Install configuration: "RelWithDebInfo"
-- Installing: C:/DEV/OPENVR/lib/openvr_api64.lib
-- Installing: C:/DEV/OPENVR/include/openvr/openvr_driver.h
-- Installing: C:/DEV/OPENVR/include/openvr/openvr_capi.h
-- Installing: C:/DEV/OPENVR/include/openvr/openvr.h
Install succeeded.


Step 6) You'll need to add OpenVR directories to environment variables or CMAKE lib settings.

I did it thus (in Windows 10):

Search bar = "Env"

Add these variables to the system or user environment: 

OPENVR_PATH C:\DEV\OPENVRSDK

OPENVR_INCLUDE %OPENVR_PATH%\include
OPENVR_LIB %OPENVR_PATH%\lib

Make sure on the command prompt you can CD to those directories and the built files are there:

CD %OPENVR_LIB%
DIR openvr_api64.lib

Step 7) Copy over openvr_api.dll and pdb to the binary / root folder of q2vkpt.

ADDITIONAL FILES REQUIRED

Step 8) You also need Pak0.pak and other files from a real quake 2 (or demo) installation to be copied into baseq2 subfolder.


Step 9) Run the game (client.exe by default)
